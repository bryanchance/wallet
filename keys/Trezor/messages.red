Red [Title: "auto generated, don't modify it manully!"] #do [_messages_red_: yes] [[enum FailureType [[1 Failure_UnexpectedMessage] [2 Failure_ButtonExpected] [3 Failure_DataError] [4 Failure_ActionCancelled] [5 Failure_PinExpected] [6 Failure_PinCancelled] [7 Failure_PinInvalid] [8 Failure_InvalidSignature] [9 Failure_ProcessError] [10 Failure_NotEnoughFunds] [11 Failure_NotInitialized] [12 Failure_PinMismatch] [99 Failure_FirmwareError]]] [enum OutputScriptType [[0 PAYTOADDRESS] [1 PAYTOSCRIPTHASH] [2 PAYTOMULTISIG] [3 PAYTOOPRETURN] [4 PAYTOWITNESS] [5 PAYTOP2SHWITNESS]]] [enum InputScriptType [[0 SPENDADDRESS] [1 SPENDMULTISIG] [2 EXTERNAL] [3 SPENDWITNESS] [4 SPENDP2SHWITNESS]]] [enum RequestType [[0 TXINPUT] [1 TXOUTPUT] [2 TXMETA] [3 TXFINISHED] [4 TXEXTRADATA]]] [enum ButtonRequestType [[1 ButtonRequest_Other] [2 ButtonRequest_FeeOverThreshold] [3 ButtonRequest_ConfirmOutput] [4 ButtonRequest_ResetDevice] [5 ButtonRequest_ConfirmWord] [6 ButtonRequest_WipeDevice] [7 ButtonRequest_ProtectCall] [8 ButtonRequest_SignTx] [9 ButtonRequest_FirmwareCheck] [10 ButtonRequest_Address] [11 ButtonRequest_PublicKey] [12 ButtonRequest_MnemonicWordCount] [13 ButtonRequest_MnemonicInput] [14 ButtonRequest_PassphraseType]]] [enum PinMatrixRequestType [[1 PinMatrixRequestType_Current] [2 PinMatrixRequestType_NewFirst] [3 PinMatrixRequestType_NewSecond]]] [enum RecoveryDeviceType [[0 RecoveryDeviceType_ScrambledWords] [1 RecoveryDeviceType_Matrix]]] [enum WordRequestType [[0 WordRequestType_Plain] [1 WordRequestType_Matrix9] [2 WordRequestType_Matrix6]]] [message HDNodeType [[1 required uint32 depth] [2 required uint32 fingerprint] [3 required uint32 child_num] [4 required bytes chain_code] [5 optional bytes private_key] [6 optional bytes public_key]]] [message HDNodePathType [[1 required HDNodeType node] [2 repeated uint32 address_n]]] [message CoinType [[1 optional string coin_name] [2 optional string coin_shortcut] [3 optional uint32 address_type] [4 optional uint64 maxfee_kb] [5 optional uint32 address_type_p2sh] [8 optional string signed_message_header] [9 optional uint32 xpub_magic] [10 optional uint32 xprv_magic] [11 optional bool segwit] [12 optional uint32 forkid] [13 optional bool force_bip143]]] [message MultisigRedeemScriptType [[1 repeated HDNodePathType pubkeys] [2 repeated bytes signatures] [3 optional uint32 m]]] [message TxInputType [[1 repeated uint32 address_n] [2 required bytes prev_hash] [3 required uint32 prev_index] [4 optional bytes script_sig] [5 optional uint32 sequence] [6 optional InputScriptType script_type] [7 optional MultisigRedeemScriptType multisig] [8 optional uint64 amount] [9 optional uint32 decred_tree] [10 optional uint32 decred_script_version]]] [message TxOutputType [[1 optional string address] [2 repeated uint32 address_n] [3 required uint64 amount] [4 required OutputScriptType script_type] [5 optional MultisigRedeemScriptType multisig] [6 optional bytes op_return_data] [7 optional uint32 decred_script_version]]] [message TxOutputBinType [[1 required uint64 amount] [2 required bytes script_pubkey] [3 optional uint32 decred_script_version]]] [message TransactionType [[1 optional uint32 version] [2 repeated TxInputType inputs] [3 repeated TxOutputBinType bin_outputs] [5 repeated TxOutputType outputs] [4 optional uint32 lock_time] [6 optional uint32 inputs_cnt] [7 optional uint32 outputs_cnt] [8 optional bytes extra_data] [9 optional uint32 extra_data_len] [10 optional uint32 decred_expiry] [11 optional bool overwintered]]] [message TxRequestDetailsType [[1 optional uint32 request_index] [2 optional bytes tx_hash] [3 optional uint32 extra_data_len] [4 optional uint32 extra_data_offset]]] [message TxRequestSerializedType [[1 optional uint32 signature_index] [2 optional bytes signature] [3 optional bytes serialized_tx]]] [message IdentityType [[1 optional string proto] [2 optional string user] [3 optional string host] [4 optional string port] [5 optional string path] [6 optional uint32 index]]] [enum PassphraseSourceType [[0 ASK] [1 DEVICE] [2 HOST]]] [message NEMTransactionCommon [[1 repeated uint32 address_n] [2 optional uint32 network] [3 optional uint32 timestamp] [4 optional uint64 fee] [5 optional uint32 deadline] [6 optional bytes signer]]] [message NEMTransfer [[1 optional string recipient] [2 optional uint64 amount] [3 optional bytes payload] [4 optional bytes public_key] [5 repeated NEMMosaic mosaics]]] [message NEMMosaic [[1 optional string namespace] [2 optional string mosaic] [3 optional uint64 quantity]]] [message NEMProvisionNamespace [[1 optional string namespace] [2 optional string parent] [3 optional string sink] [4 optional uint64 fee]]] [enum NEMMosaicLevy [[1 MosaicLevy_Absolute] [2 MosaicLevy_Percentile]]] [message NEMMosaicCreation [[1 optional NEMMosaicDefinition definition] [2 optional string sink] [3 optional uint64 fee]]] [message NEMMosaicDefinition [[1 optional string name] [2 optional string ticker] [3 optional string namespace] [4 optional string mosaic] [5 optional uint32 divisibility] [6 optional NEMMosaicLevy levy] [7 optional uint64 fee] [8 optional string levy_address] [9 optional string levy_namespace] [10 optional string levy_mosaic] [11 optional uint64 supply] [12 optional bool mutable_supply] [13 optional bool transferable] [14 optional string description] [15 repeated uint32 networks]]] [message NEMMosaicSupplyChange [[1 optional string namespace] [2 optional string mosaic] [3 optional NEMSupplyChangeType type] [4 optional uint64 delta]]] [enum NEMSupplyChangeType [[1 SupplyChange_Increase] [2 SupplyChange_Decrease]]] [message NEMAggregateModification [[1 repeated NEMCosignatoryModification modifications] [2 optional sint32 relative_change]]] [message NEMCosignatoryModification [[1 optional NEMModificationType type] [2 optional bytes public_key]]] [enum NEMModificationType [[1 CosignatoryModification_Add] [2 CosignatoryModification_Delete]]] [message NEMImportanceTransfer [[1 optional NEMImportanceTransferMode mode] [2 optional bytes public_key]]] [enum NEMImportanceTransferMode [[1 ImportanceTransfer_Activate] [2 ImportanceTransfer_Deactivate]]] [message StellarAssetType [[1 optional uint32 type] [2 optional string code] [3 optional bytes issuer]]] [enum LiskTransactionType [[0 Transfer] [1 RegisterSecondPassphrase] [2 RegisterDelegate] [3 CastVotes] [4 RegisterMultisignatureAccount] [5 CreateDapp] [6 TransferIntoDapp] [7 TransferOutOfDapp]]] [message LiskTransactionCommon [[1 optional LiskTransactionType type] [2 optional uint64 amount] [3 optional uint64 fee] [4 optional string recipient_id] [5 optional bytes sender_public_key] [6 optional bytes requester_public_key] [7 optional bytes signature] [8 optional uint32 timestamp] [9 optional LiskTransactionAsset asset]]] [message LiskTransactionAsset [[1 optional LiskSignatureType signature] [2 optional LiskDelegateType delegate] [3 repeated string votes] [4 optional LiskMultisignatureType multisignature] [5 optional string data]]] [message LiskSignatureType [[1 optional bytes public_key]]] [message LiskDelegateType [[1 optional string username]]] [message LiskMultisignatureType [[1 optional uint32 min] [2 optional uint32 life_time] [3 repeated string keys_group]]] [enum MessageType [[0 MessageType_Initialize] [1 MessageType_Ping] [2 MessageType_Success] [3 MessageType_Failure] [4 MessageType_ChangePin] [5 MessageType_WipeDevice] [6 MessageType_FirmwareErase] [7 MessageType_FirmwareUpload] [8 MessageType_FirmwareRequest] [9 MessageType_GetEntropy] [10 MessageType_Entropy] [11 MessageType_GetPublicKey] [12 MessageType_PublicKey] [13 MessageType_LoadDevice] [14 MessageType_ResetDevice] [15 MessageType_SignTx] [16 MessageType_SimpleSignTx] [17 MessageType_Features] [18 MessageType_PinMatrixRequest] [19 MessageType_PinMatrixAck] [20 MessageType_Cancel] [21 MessageType_TxRequest] [22 MessageType_TxAck] [23 MessageType_CipherKeyValue] [24 MessageType_ClearSession] [25 MessageType_ApplySettings] [26 MessageType_ButtonRequest] [27 MessageType_ButtonAck] [28 MessageType_ApplyFlags] [29 MessageType_GetAddress] [30 MessageType_Address] [32 MessageType_SelfTest] [34 MessageType_BackupDevice] [35 MessageType_EntropyRequest] [36 MessageType_EntropyAck] [38 MessageType_SignMessage] [39 MessageType_VerifyMessage] [40 MessageType_MessageSignature] [41 MessageType_PassphraseRequest] [42 MessageType_PassphraseAck] [77 MessageType_PassphraseStateRequest] [78 MessageType_PassphraseStateAck] [43 MessageType_EstimateTxSize] [44 MessageType_TxSize] [45 MessageType_RecoveryDevice] [46 MessageType_WordRequest] [47 MessageType_WordAck] [48 MessageType_CipheredKeyValue] [49 MessageType_EncryptMessage] [50 MessageType_EncryptedMessage] [51 MessageType_DecryptMessage] [52 MessageType_DecryptedMessage] [53 MessageType_SignIdentity] [54 MessageType_SignedIdentity] [55 MessageType_GetFeatures] [56 MessageType_EthereumGetAddress] [57 MessageType_EthereumAddress] [58 MessageType_EthereumSignTx] [59 MessageType_EthereumTxRequest] [60 MessageType_EthereumTxAck] [61 MessageType_GetECDHSessionKey] [62 MessageType_ECDHSessionKey] [63 MessageType_SetU2FCounter] [64 MessageType_EthereumSignMessage] [65 MessageType_EthereumVerifyMessage] [66 MessageType_EthereumMessageSignature] [67 MessageType_NEMGetAddress] [68 MessageType_NEMAddress] [69 MessageType_NEMSignTx] [70 MessageType_NEMSignedTx] [71 MessageType_CosiCommit] [72 MessageType_CosiCommitment] [73 MessageType_CosiSign] [74 MessageType_CosiSignature] [75 MessageType_NEMDecryptMessage] [76 MessageType_NEMDecryptedMessage] [100 MessageType_DebugLinkDecision] [101 MessageType_DebugLinkGetState] [102 MessageType_DebugLinkState] [103 MessageType_DebugLinkStop] [104 MessageType_DebugLinkLog] [110 MessageType_DebugLinkMemoryRead] [111 MessageType_DebugLinkMemory] [112 MessageType_DebugLinkMemoryWrite] [113 MessageType_DebugLinkFlashErase] [114 MessageType_LiskGetAddress] [115 MessageType_LiskAddress] [116 MessageType_LiskSignTx] [117 MessageType_LiskSignedTx] [121 MessageType_LiskGetPublicKey] [122 MessageType_LiskPublicKey] [200 MessageType_StellarGetPublicKey] [201 MessageType_StellarPublicKey] [202 MessageType_StellarSignTx] [203 MessageType_StellarTxOpRequest] [210 MessageType_StellarCreateAccountOp] [211 MessageType_StellarPaymentOp] [212 MessageType_StellarPathPaymentOp] [213 MessageType_StellarManageOfferOp] [214 MessageType_StellarCreatePassiveOfferOp] [215 MessageType_StellarSetOptionsOp] [216 MessageType_StellarChangeTrustOp] [217 MessageType_StellarAllowTrustOp] [218 MessageType_StellarAccountMergeOp] [220 MessageType_StellarManageDataOp] [221 MessageType_StellarBumpSequenceOp] [230 MessageType_StellarSignedTx]]] [message Initialize [[1 optional bytes state] [2 optional bool skip_passphrase]]] [message GetFeatures []] [message Features [[1 optional string vendor] [2 optional uint32 major_version] [3 optional uint32 minor_version] [4 optional uint32 patch_version] [5 optional bool bootloader_mode] [6 optional string device_id] [7 optional bool pin_protection] [8 optional bool passphrase_protection] [9 optional string language] [10 optional string label] [11 repeated CoinType coins] [12 optional bool initialized] [13 optional bytes revision] [14 optional bytes bootloader_hash] [15 optional bool imported] [16 optional bool pin_cached] [17 optional bool passphrase_cached] [18 optional bool firmware_present] [19 optional bool needs_backup] [20 optional uint32 flags] [21 optional string model] [22 optional uint32 fw_major] [23 optional uint32 fw_minor] [24 optional uint32 fw_patch] [25 optional string fw_vendor] [26 optional bytes fw_vendor_keys] [27 optional bool unfinished_backup]]] [message ClearSession []] [message ApplySettings [[1 optional string language] [2 optional string label] [3 optional bool use_passphrase] [4 optional bytes homescreen] [5 optional PassphraseSourceType passphrase_source] [6 optional uint32 auto_lock_delay_ms]]] [message ApplyFlags [[1 optional uint32 flags]]] [message ChangePin [[1 optional bool remove]]] [message Ping [[1 optional string message] [2 optional bool button_protection] [3 optional bool pin_protection] [4 optional bool passphrase_protection]]] [message Success [[1 optional string message]]] [message Failure [[1 optional FailureType code] [2 optional string message]]] [message ButtonRequest [[1 optional ButtonRequestType code] [2 optional string data]]] [message ButtonAck []] [message PinMatrixRequest [[1 optional PinMatrixRequestType type]]] [message PinMatrixAck [[1 required string pin]]] [message Cancel []] [message PassphraseRequest [[1 optional bool on_device]]] [message PassphraseAck [[1 optional string passphrase] [2 optional bytes state]]] [message PassphraseStateRequest [[1 optional bytes state]]] [message PassphraseStateAck []] [message GetEntropy [[1 required uint32 size]]] [message Entropy [[1 required bytes entropy]]] [message GetPublicKey [[1 repeated uint32 address_n] [2 optional string ecdsa_curve_name] [3 optional bool show_display] [4 optional string coin_name]]] [message PublicKey [[1 required HDNodeType node] [2 optional string xpub]]] [message GetAddress [[1 repeated uint32 address_n] [2 optional string coin_name] [3 optional bool show_display] [4 optional MultisigRedeemScriptType multisig] [5 optional InputScriptType script_type]]] [message EthereumGetAddress [[1 repeated uint32 address_n] [2 optional bool show_display]]] [message Address [[1 required string address]]] [message EthereumAddress [[1 required bytes address]]] [message WipeDevice []] [message LoadDevice [[1 optional string mnemonic] [2 optional HDNodeType node] [3 optional string pin] [4 optional bool passphrase_protection] [5 optional string language] [6 optional string label] [7 optional bool skip_checksum] [8 optional uint32 u2f_counter]]] [message ResetDevice [[1 optional bool display_random] [2 optional uint32 strength] [3 optional bool passphrase_protection] [4 optional bool pin_protection] [5 optional string language] [6 optional string label] [7 optional uint32 u2f_counter] [8 optional bool skip_backup]]] [message BackupDevice []] [message EntropyRequest []] [message EntropyAck [[1 optional bytes entropy]]] [message RecoveryDevice [[1 optional uint32 word_count] [2 optional bool passphrase_protection] [3 optional bool pin_protection] [4 optional string language] [5 optional string label] [6 optional bool enforce_wordlist] [8 optional uint32 type] [9 optional uint32 u2f_counter] [10 optional bool dry_run]]] [message WordRequest [[1 optional WordRequestType type]]] [message WordAck [[1 required string word]]] [message SignMessage [[1 repeated uint32 address_n] [2 required bytes message] [3 optional string coin_name] [4 optional InputScriptType script_type]]] [message VerifyMessage [[1 optional string address] [2 optional bytes signature] [3 optional bytes message] [4 optional string coin_name]]] [message MessageSignature [[1 optional string address] [2 optional bytes signature]]] [message EncryptMessage [[1 optional bytes pubkey] [2 optional bytes message] [3 optional bool display_only] [4 repeated uint32 address_n] [5 optional string coin_name]]] [message EncryptedMessage [[1 optional bytes nonce] [2 optional bytes message] [3 optional bytes hmac]]] [message DecryptMessage [[1 repeated uint32 address_n] [2 optional bytes nonce] [3 optional bytes message] [4 optional bytes hmac]]] [message DecryptedMessage [[1 optional bytes message] [2 optional string address]]] [message CipherKeyValue [[1 repeated uint32 address_n] [2 optional string key] [3 optional bytes value] [4 optional bool encrypt] [5 optional bool ask_on_encrypt] [6 optional bool ask_on_decrypt] [7 optional bytes iv]]] [message CipheredKeyValue [[1 optional bytes value]]] [message EstimateTxSize [[1 required uint32 outputs_count] [2 required uint32 inputs_count] [3 optional string coin_name]]] [message TxSize [[1 optional uint32 tx_size]]] [message SignTx [[1 required uint32 outputs_count] [2 required uint32 inputs_count] [3 optional string coin_name] [4 optional uint32 version] [5 optional uint32 lock_time] [6 optional uint32 decred_expiry]]] [message SimpleSignTx [[1 repeated TxInputType inputs] [2 repeated TxOutputType outputs] [3 repeated TransactionType transactions] [4 optional string coin_name] [5 optional uint32 version] [6 optional uint32 lock_time]]] [message TxRequest [[1 optional RequestType request_type] [2 optional TxRequestDetailsType details] [3 optional TxRequestSerializedType serialized]]] [message TxAck [[1 optional TransactionType tx]]] [message EthereumSignTx [[1 repeated uint32 address_n] [2 optional bytes nonce] [3 optional bytes gas_price] [4 optional bytes gas_limit] [5 optional bytes to] [6 optional bytes value] [7 optional bytes data_initial_chunk] [8 optional uint32 data_length] [9 optional uint32 chain_id] [10 optional uint32 tx_type]]] [message EthereumTxRequest [[1 optional uint32 data_length] [2 optional uint32 signature_v] [3 optional bytes signature_r] [4 optional bytes signature_s]]] [message EthereumTxAck [[1 optional bytes data_chunk]]] [message EthereumSignMessage [[1 repeated uint32 address_n] [2 required bytes message]]] [message EthereumVerifyMessage [[1 optional bytes address] [2 optional bytes signature] [3 optional bytes message]]] [message EthereumMessageSignature [[1 optional bytes address] [2 optional bytes signature]]] [message SignIdentity [[1 optional IdentityType identity] [2 optional bytes challenge_hidden] [3 optional string challenge_visual] [4 optional string ecdsa_curve_name]]] [message SignedIdentity [[1 optional string address] [2 optional bytes public_key] [3 optional bytes signature]]] [message GetECDHSessionKey [[1 optional IdentityType identity] [2 optional bytes peer_public_key] [3 optional string ecdsa_curve_name]]] [message ECDHSessionKey [[1 optional bytes session_key]]] [message SetU2FCounter [[1 optional uint32 u2f_counter]]] [message FirmwareErase [[1 optional uint32 length]]] [message FirmwareRequest [[1 optional uint32 offset] [2 optional uint32 length]]] [message FirmwareUpload [[1 required bytes payload] [2 optional bytes hash]]] [message SelfTest [[1 optional bytes payload]]] [message NEMGetAddress [[1 repeated uint32 address_n] [2 optional uint32 network] [3 optional bool show_display]]] [message NEMAddress [[1 required string address]]] [message NEMSignTx [[1 optional NEMTransactionCommon transaction] [2 optional NEMTransactionCommon multisig] [3 optional NEMTransfer transfer] [4 optional bool cosigning] [5 optional NEMProvisionNamespace provision_namespace] [6 optional NEMMosaicCreation mosaic_creation] [7 optional NEMMosaicSupplyChange supply_change] [8 optional NEMAggregateModification aggregate_modification] [9 optional NEMImportanceTransfer importance_transfer]]] [message NEMSignedTx [[1 optional bytes data] [2 optional bytes signature]]] [message NEMDecryptMessage [[1 repeated uint32 address_n] [2 optional uint32 network] [3 optional bytes public_key] [4 optional bytes payload]]] [message NEMDecryptedMessage [[1 optional bytes payload]]] [message CosiCommit [[1 repeated uint32 address_n] [2 optional bytes data]]] [message CosiCommitment [[1 optional bytes commitment] [2 optional bytes pubkey]]] [message CosiSign [[1 repeated uint32 address_n] [2 optional bytes data] [3 optional bytes global_commitment] [4 optional bytes global_pubkey]]] [message CosiSignature [[1 optional bytes signature]]] [message StellarGetPublicKey [[1 repeated uint32 address_n]]] [message StellarPublicKey [[1 optional bytes public_key]]] [message StellarSignTx [[1 optional uint32 protocol_version] [2 repeated uint32 address_n] [3 optional string network_passphrase] [4 optional bytes source_account] [5 optional uint32 fee] [6 optional uint64 sequence_number] [8 optional uint32 timebounds_start] [9 optional uint32 timebounds_end] [10 optional uint32 memo_type] [11 optional string memo_text] [12 optional uint64 memo_id] [13 optional bytes memo_hash] [14 optional uint32 num_operations]]] [message StellarTxOpRequest []] [message StellarPaymentOp [[1 optional bytes source_account] [2 optional bytes destination_account] [3 optional StellarAssetType asset] [4 optional sint64 amount]]] [message StellarCreateAccountOp [[1 optional bytes source_account] [2 optional bytes new_account] [3 optional sint64 starting_balance]]] [message StellarPathPaymentOp [[1 optional bytes source_account] [2 optional StellarAssetType send_asset] [3 optional sint64 send_max] [4 optional bytes destination_account] [5 optional StellarAssetType destination_asset] [6 optional sint64 destination_amount] [7 repeated StellarAssetType paths]]] [message StellarManageOfferOp [[1 optional bytes source_account] [2 optional StellarAssetType selling_asset] [3 optional StellarAssetType buying_asset] [4 optional sint64 amount] [5 optional uint32 price_n] [6 optional uint32 price_d] [7 optional uint64 offer_id]]] [message StellarCreatePassiveOfferOp [[1 optional bytes source_account] [2 optional StellarAssetType selling_asset] [3 optional StellarAssetType buying_asset] [4 optional sint64 amount] [5 optional uint32 price_n] [6 optional uint32 price_d]]] [message StellarSetOptionsOp [[1 optional bytes source_account] [2 optional bytes inflation_destination_account] [3 optional uint32 clear_flags] [4 optional uint32 set_flags] [5 optional uint32 master_weight] [6 optional uint32 low_threshold] [7 optional uint32 medium_threshold] [8 optional uint32 high_threshold] [9 optional string home_domain] [10 optional uint32 signer_type] [11 optional bytes signer_key] [12 optional uint32 signer_weight]]] [message StellarChangeTrustOp [[1 optional bytes source_account] [2 optional StellarAssetType asset] [3 optional uint64 limit]]] [message StellarAllowTrustOp [[1 optional bytes source_account] [2 optional bytes trusted_account] [3 optional uint32 asset_type] [4 optional string asset_code] [5 optional uint32 is_authorized]]] [message StellarAccountMergeOp [[1 optional bytes source_account] [2 optional bytes destination_account]]] [message StellarManageDataOp [[1 optional bytes source_account] [2 optional string key] [3 optional bytes value]]] [message StellarBumpSequenceOp [[1 optional bytes source_account] [2 optional uint64 bump_to]]] [message StellarSignedTx [[1 optional bytes public_key] [2 optional bytes signature]]] [message LiskGetPublicKey [[1 repeated uint32 address_n] [2 optional bool show_display]]] [message LiskPublicKey [[1 optional bytes public_key]]] [message LiskGetAddress [[1 repeated uint32 address_n] [2 optional bool show_display]]] [message LiskAddress [[1 optional string address]]] [message LiskSignTx [[1 repeated uint32 address_n] [2 optional LiskTransactionCommon transaction]]] [message LiskSignedTx [[1 optional bytes signature]]] [message DebugLinkDecision [[1 optional bool yes_no] [2 optional bool up_down] [3 optional string input]]] [message DebugLinkGetState []] [message DebugLinkState [[1 optional bytes layout] [2 optional string pin] [3 optional string matrix] [4 optional string mnemonic] [5 optional HDNodeType node] [6 optional bool passphrase_protection] [7 optional string reset_word] [8 optional bytes reset_entropy] [9 optional string recovery_fake_word] [10 optional uint32 recovery_word_pos] [11 optional uint32 reset_word_pos]]] [message DebugLinkStop []] [message DebugLinkLog [[1 optional uint32 level] [2 optional string bucket] [3 optional string text]]] [message DebugLinkMemoryRead [[1 optional uint32 address] [2 optional uint32 length]]] [message DebugLinkMemory [[1 optional bytes memory]]] [message DebugLinkMemoryWrite [[1 optional uint32 address] [2 optional bytes memory] [3 optional bool flash]]] [message DebugLinkFlashErase [[1 optional uint32 sector]]]]